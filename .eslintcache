[{"C:\\Users\\dell\\Desktop\\weather-app\\src\\index.js":"1","C:\\Users\\dell\\Desktop\\weather-app\\src\\reportWebVitals.js":"2","C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\App.js":"3","C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\WeatherContainer.js":"4","C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\WeatherInfo.js":"5"},{"size":511,"mtime":1608919746604,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":313,"mtime":1608964030724,"results":"9","hashOfConfig":"7"},{"size":4724,"mtime":1609008618031,"results":"10","hashOfConfig":"7"},{"size":2178,"mtime":1608963706017,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"otgcrc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\dell\\Desktop\\weather-app\\src\\index.js",[],["24","25"],"C:\\Users\\dell\\Desktop\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\App.js",[],"C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\WeatherContainer.js",[],"C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\WeatherInfo.js",["26"],"import React from \"react\";\nimport \"../Style/Weather.css\";\nimport { FaTemperatureHigh, FaWind, FaCloudRain } from \"react-icons/fa\"\nimport { FiDroplet } from \"react-icons/fi\"\nimport { MdVisibility } from \"react-icons/md\"\n\nfunction WeatherInfo(props) {\n    const { tempC, tempF, humidity, min, max, Visiblity, Precipitation, icon, wind, description, details, city } = props.data;\n\n    return (\n        <React.Fragment>\n            <div className=\"city-container\">\n                <p> {city} </p>\n            </div>\n            <header>\n                <h3>{description}</h3>\n                <div className=\"header-desription\">\n                    <p> {details}</p>\n                    <img src={`https://openweathermap.org/img/wn/${icon}@2x.png`} />\n                    <h4>Temperature</h4>\n                    <div className=\"temperature\">\n                        <p>{tempC} <span className=\"degree-symbol\">C</span></p>\n                        <p>{tempF} <span className=\"degree-symbol\">F</span></p>\n                    </div>\n                </div>\n            </header>\n\n            <footer id=\"main-footer\" class=\"py-2\">\n                <div>----------------------------------------------------------------------------------------------------</div>\n                <div className=\"container\">\n                    <div >\n                        <h4> <FaTemperatureHigh />Min-Max</h4>\n                        <p>{min}-{max}</p>\n                    </div>\n                    <div>\n                        <h4> <FiDroplet /> Humidity</h4>\n                        <p>{humidity}</p>\n                    </div>\n                    <div>\n                        <h4> <FaCloudRain />Precipitation</h4>\n                        <p>{Precipitation}</p>\n                    </div>\n                    <div>\n                        <h4> <FaWind /> Wind</h4>\n                        <p>{wind}</p>\n                    </div>\n\n                    <div>\n                        <h4> <MdVisibility /> Visiblity</h4>\n                        <p>{Visiblity}</p>\n                    </div>\n\n                </div>\n            </footer>\n        </React.Fragment>\n\n    );\n}\n\nexport default WeatherInfo;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":19,"column":21,"nodeType":"33","endLine":19,"endColumn":85},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
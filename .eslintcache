[{"C:\\Users\\dell\\Desktop\\weather-app\\src\\index.js":"1","C:\\Users\\dell\\Desktop\\weather-app\\src\\reportWebVitals.js":"2","C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\App.js":"3","C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\WeatherContainer.js":"4","C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\WeatherInfo.js":"5","C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\Favourites.js":"6","C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\RecentSearch.js":"7"},{"size":511,"mtime":1608919746604,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":3679,"mtime":1609164506224,"results":"11","hashOfConfig":"9"},{"size":3284,"mtime":1609180416860,"results":"12","hashOfConfig":"9"},{"size":1918,"mtime":1609169299569,"results":"13","hashOfConfig":"9"},{"size":1083,"mtime":1609176831511,"results":"14","hashOfConfig":"9"},{"size":691,"mtime":1609154148159,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"otgcrc",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\dell\\Desktop\\weather-app\\src\\index.js",[],["34","35"],"C:\\Users\\dell\\Desktop\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\App.js",["36"],"import '../Style/App.css';\nimport WeatherConatiner from \"./WeatherContainer\";\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from \"react-router-dom\";\nimport Favourites from './Favourites';\nimport RecentSearch from './RecentSearch';\nimport React, { useState } from \"react\";\n\nfunction App() {\n    const [info, setinfo] = useState([]);\n    const [rsearch, setrsearch] = useState([]);\n    const dateBuilder = (d) => {\n        let months = [\n            \"Jan\",\n            \"Feb\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"Aug\",\n            \"Sept\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n        ];\n        let days = [\n            \"Sun\",\n            \"Mon\",\n            \"Tues\",\n            \"Wed\",\n            \" Thur\",\n            \"Fri\",\n            \"Sat\",\n        ];\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return `${day},${date} ${month} ${year}`;\n    };\n    function timeBuilder(date) {\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        var strTime = hours + ':' + minutes + ' ' + ampm;\n        return strTime;\n    }\n    return (\n        <section className=\"app-container\">\n            <div className=\"logo\">\n            </div>\n            <div className='page'>\n                <div className=\"date\">\n                    <div >{dateBuilder(new Date())} {timeBuilder(new Date())}</div>\n                </div>\n                <Router>\n                    <div >\n                        <nav >\n                            <ul>\n                                <li>\n                                    <Link\n                                        activeStyle={{\n                                            fontweight: 'bold',\n                                            color: 'grey'\n                                        }}\n                                        to=\"/\">Home</Link>\n                                </li>\n                                <li>\n                                    <Link\n                                        activeStyle={{\n                                            fontweight: 'bold',\n                                            color: 'magenta'\n                                        }} to=\"/Favourites\">Favourite</Link>\n                                </li>\n                                <li>\n                                    <Link\n                                        activeStyle={{\n                                            fontweight: 'bold',\n                                            color: 'green'\n                                        }} to=\"/RecentSearch\">Recent Search</Link>\n                                </li>\n                            </ul>\n                        </nav>\n\n                        <Switch>\n                            <Route exact path=\"/\"><WeatherConatiner info={info} setinfo={setinfo} rsearch={rsearch} setrsearch={setrsearch} /></Route>\n                            <Route exact path=\"/Favourites\" > <Favourites info={info} setinfo={setinfo} /> </Route>\n                            <Route exact path=\"/RecentSearch\"><RecentSearch rsearch={rsearch} setrsearch={setrsearch} /></Route>\n                        </Switch>\n                    </div>\n                </Router>\n            </div>\n        </section>\n    );\n}\n\nexport default App;\n\n","C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\WeatherContainer.js",[],"C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\WeatherInfo.js",["37"],"import React from \"react\";\nimport \"../Style/Weather.css\";\nimport {FaTemperatureHigh,FaWind, FaCloudRain} from \"react-icons/fa\"\nimport {FiDroplet} from \"react-icons/fi\"\nimport {MdVisibility} from \"react-icons/md\"\n\n\nfunction WeatherInfo(props) {\n    const {tempC, tempF,humidity, min, max,Visiblity,Precipitation, icon, wind, description,details, city} =props.data;\n    return (\n      <React.Fragment>\n       \n      <div className =\"city-container\">\n          <p> {city} </p>\n      </div>\n      <header> \n          <h3>{description}</h3>\n          <div className = \"header-desription\"> \n          <p> {details}</p>\n          <img src= {`https://openweathermap.org/img/wn/${icon}@2x.png`} />\n          <h4>Temperature</h4>\n          <div className =\"temperature\"> \n          <p>{tempC} <span className = \"degree-symbol\">C</span></p>\n          <p>{tempF} <span className =\"degree-symbol\">F</span></p>\n          </div>\n          </div>\n          </header>\n          \n          <footer id = \"main-footer\" class = \"py-2\">\n          <div>--------------------------------------------------------------------------</div>\n          <div className = \"container\"> \n          <div >  \n                  <h4> <FaTemperatureHigh/>Min-Max</h4>\n                  <p>{min}-{max}</p>\n              </div>\n              <div>\n                  <h4> <FiDroplet /> Humidity</h4>\n                  <p>{humidity}</p>\n              </div>\n              <div>\n                  <h4> <FaCloudRain />Precipitation</h4>\n                  <p>{Precipitation}</p>\n              </div>\n              <div>\n              <h4> <FaWind /> Wind</h4>\n                  <p>{wind}</p>\n              </div>\n              \n              <div>\n              <h4> <MdVisibility /> Visiblity</h4>\n                  <p>{Visiblity}</p>\n              </div>\n              </div>\n          </footer>\n      </React.Fragment>\n      \n    );\n}\n\nexport default WeatherInfo;","C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\Favourites.js",["38"],"C:\\Users\\dell\\Desktop\\weather-app\\src\\components\\RecentSearch.js",["39"],"\nimport '../Style/Weather.css'\nfunction RecentSearch ({rsearch, setrsearch})   { \n \n    return (\n        <div >\n        {rsearch.map((menu) => {\n            const {names, icons, tempCs, descs} = menu;\n            return (\n                <div className = \"fav\">\n                    <h1>{names} </h1>\n                    <img src= {`https://openweathermap.org/img/wn/${icons}@2x.png`} />\n                    <p>{tempCs}</p>\n                    <p>{descs}</p>\n                    <div> \n                    <button   className = \"material-icons\">favorite</button>\n                    </div>\n                </div>\n            )\n        })}\n    </div>\n   \n    )\n} \n\nexport default RecentSearch;",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":56,"nodeType":"46","messageId":"47","endLine":3,"endColumn":64},{"ruleId":"48","severity":1,"message":"49","line":20,"column":11,"nodeType":"50","endLine":20,"endColumn":76},{"ruleId":"48","severity":1,"message":"49","line":22,"column":25,"nodeType":"50","endLine":22,"endColumn":89},{"ruleId":"48","severity":1,"message":"49","line":12,"column":21,"nodeType":"50","endLine":12,"endColumn":87},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]